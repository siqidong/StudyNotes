HTTP stands for Hypertext Transfer Protocol, and is the network protocol used on the Web.
It runs on top of TCP/IP.
HTTP uses a request/response model—the client makes an HTTP request, and the web server
gives back an HTTP response that the browser then  gures out how to handle (depending on
the content type of the response).If the response from the server is an HTML page, the HTML is added to the HTTP response.An HTTP request includes the request URL (the resource the client is trying to ac- cess),
the HTTP method (GET, POST, etc.), and (optionally) form parameter data (also called the “query string”).An HTTP response includes a status code, the content-type (also known as MIME type), 
and the actual content of the response (HTML, image, etc.)A GET request appends form data to the end of the URL.A POST request includes form data in the body of the request.A MIME type tells the browser what kind of data the browser is about to receive so that 
the browser will know what to do with it (render the HTML, display the graphic, play the music, etc.)URL stands for Uniform Resource Locator. Every resource on the web has its own unique address in this format.
It starts with a protocol, followed by the server name, an optional port number, 
and usually a speci c path and resource name. 
It can also include an optional query string, if the URL is for a GET request.Web servers are good at serving static HTML pages, but if you need dynamically- generated 
data in the page (the current time, for example), you need some kind of helper app that can work with the server.
The non-Java term for these helper apps (most often written in Perl) is CGI 
(which stands for Common Gateway Interface).Putting HTML inside a println() statement is ugly and error-prone, 
but JSPs solve that problem by letting you put Java into an HTML page 
rather than putting HTML into Java code.